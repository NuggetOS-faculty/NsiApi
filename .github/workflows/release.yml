name: Release Workflow

on:
  release:
    types: [ published ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0.x"
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Login to Azure Container Registry
        run: az login --password ${{ secrets.PASSWORD }} --username ${{ secrets.USERNAME }}

      - name: Run EF Core migrations
        run: |
          dotnet tool install --global dotnet-ef
          dotnet restore
          dotnet ef database update --verbose --configuration Release --project ./NSIProject.Infrastructure --startup-project ./NSIProject
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./NSIProject/Dockerfile
          push: true
          tags: ${{ secrets.ACR_NAME }}/nsi:v${{ github.event.release.tag_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Deploy to Azure Container Instance
        run: |
          az container create --resource-group <resourceGroupName> --name nsi-project --image ${{ secrets.ACR_NAME }}/nsi:v${{ github.event.release.tag_name }} --dns-name-label nsi-project --ports 80
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}

      - name: Run Docker container
        run: docker run -d -p 8080:8080 ${{ secrets.ACR_NAME }}/nsi:v${{ github.event.release.tag_name }}
